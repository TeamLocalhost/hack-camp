<!DOCTYPE html>
<html lang="en">
<head>
    <link href="//cdn.thisiswaldo.com" rel="dns-prefetch">
    <link href="//fonts.googleapis.com" rel="dns-prefetch">

	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<title>Executing Shell Commands with Node.js</title>
    <meta name="HandheldFriendly" content="True" />
	<meta name="keywords" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<!-- fav icons -->
	<link rel="shortcut icon" href="/favicon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/images/apple-touch-icon.png?v=0879c772bf">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/images/favicon-32x32.png?v=0879c772bf">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicon-16x16.png?v=0879c772bf">
    <!-- header scripts -->
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            setTimeout(function() {
                var e = document.createElement("script");
                e.type="text/javascript",
                e.src="//cdn.thisiswaldo.com/static/js/3873.js",
                document.getElementsByTagName("head")[0].appendChild(e);
            }, 1000);
        }, false);
    </script>
	<!-- stylesheets -->
    <link href="//fonts.googleapis.com/css?family=Nunito:400,400i,700,700i&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/assets/css/bootstrap.min.css?v=0879c772bf">
	<link rel="stylesheet" href="/assets/css/font-awesome.min.css?v=0879c772bf">
	<link rel="stylesheet" type="text/css" href="/assets/css/screen.css?v=0879c772bf">
	<link rel="stylesheet" type="text/css" href="/assets/css/hl-styles/atom_one_dark.css?v=0879c772bf">
	<script>
/*====================================================
  THEME SETTINGS & GLOBAL VARIABLES
====================================================*/
//  1. Disqus comment settings
var disqus_shortname = 'stackabuse'; // required: replace example with your forum shortname

//	2. Sidebar Position
var sidebar_left = false; // Set true or flase for positioning sidebar on left

//  3. Recent Post count
var recent_post_count = 3;

//	4. Google+ badge settings
var badge_type = 'page'; // person / page / community ----- three type of google badge
var google_plus_url = 'https://plus.google.com/111813546240107028721';

//	5. Facebook Page Setting
var facebook_page_url = 'https://www.facebook.com/stackabuse';

//	6. Twitter Setting
var twitter_url = 'https://twitter.com/ScottWRobinson';
var twitter_widget_id = '722928793669607425';
var number_of_tweet = 3;

//	7. Mailchimp signup form Setting
var mailchimp_form_url = '//stackabuse.us10.list-manage.com/subscribe/post?u=90b216fdbe02b25619ec94fc3&amp;id=bc2bb312cd';
var success_message = "Please check your inbox and confirm your email address. Thank you!";

//	8. Flickr Setting
//var flickr_id = '52617155@N08';
var flickr_id = '';
</script>
    <meta name="description" content="With Node, we can run shell commands and process their I/O using JavaScript, instead of the shell scripting language. This makes the application easier to maintain and develop as we stay in the same environment." />
    <link rel="shortcut icon" href="/favicon.png" type="image/png" />
    <link rel="canonical" href="https://stackabuse.com/executing-shell-commands-with-node-js/" />
    <meta name="referrer" content="no-referrer-when-downgrade" />
    
    <meta property="og:site_name" content="Stack Abuse" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="Executing Shell Commands with Node.js" />
    <meta property="og:description" content="Introduction
System administrators and developers frequently turn to automation to reduce
their workload and improve their processes. When working with servers, automated
tasks are frequently scripted with shell scripts. However, a developer might
prefer to use a more general higher-level language for complex tasks. Many
applications also need to interact with the file system and other OS-level
components, which is often more easily done with command line level utilities.

With Node.js, we can r" />
    <meta property="og:url" content="https://stackabuse.com/executing-shell-commands-with-node-js/" />
    <meta property="article:published_time" content="2019-12-17T13:55:00.000Z" />
    <meta property="article:modified_time" content="2020-02-01T20:12:24.000Z" />
    <meta property="article:tag" content="node" />
    <meta property="article:tag" content="javascript" />
    <meta property="article:tag" content="shell" />
    
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="Executing Shell Commands with Node.js" />
    <meta name="twitter:description" content="Introduction
System administrators and developers frequently turn to automation to reduce
their workload and improve their processes. When working with servers, automated
tasks are frequently scripted with shell scripts. However, a developer might
prefer to use a more general higher-level language for complex tasks. Many
applications also need to interact with the file system and other OS-level
components, which is often more easily done with command line level utilities.

With Node.js, we can r" />
    <meta name="twitter:url" content="https://stackabuse.com/executing-shell-commands-with-node-js/" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="Arpan Abhishek" />
    <meta name="twitter:label2" content="Filed under" />
    <meta name="twitter:data2" content="node, javascript, shell" />
    <meta name="twitter:site" content="@ScottWRobinson" />
    <meta name="twitter:creator" content="@arpancodes" />
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Stack Abuse",
        "logo": {
            "@type": "ImageObject",
            "url": "https://stackabuse.com/favicon.png",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Arpan Abhishek",
        "image": {
            "@type": "ImageObject",
            "url": "//www.gravatar.com/avatar/2943afa172fe704918dfbfbdf48d6e2c?s=250&d=mm&r=x",
            "width": 250,
            "height": 250
        },
        "url": "https://stackabuse.com/author/arpan/",
        "sameAs": [
            "https://twitter.com/arpancodes"
        ]
    },
    "headline": "Executing Shell Commands with Node.js",
    "url": "https://stackabuse.com/executing-shell-commands-with-node-js/",
    "datePublished": "2019-12-17T13:55:00.000Z",
    "dateModified": "2020-02-01T20:12:24.000Z",
    "keywords": "node, javascript, shell",
    "description": "Introduction\nSystem administrators and developers frequently turn to automation to reduce\ntheir workload and improve their processes. When working with servers, automated\ntasks are frequently scripted with shell scripts. However, a developer might\nprefer to use a more general higher-level language for complex tasks. Many\napplications also need to interact with the file system and other OS-level\ncomponents, which is often more easily done with command line level utilities.\n\nWith Node.js, we can r",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://stackabuse.com/"
    }
}
    </script>

    <meta name="generator" content="Ghost 2.23" />
    <link rel="alternate" type="application/rss+xml" title="Stack Abuse" href="https://stackabuse.com/rss/" />
    <!-- Repixel Code -->
<script>
  (function(w, d, s, id, src){
  w.Repixel = r = {
    init: function(id) {
      w.repixelId = id;
    }
  };
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)){ return; }
  js = d.createElement(s); 
  js.id = id;
  js.async = true;
  js.onload = function(){
      Repixel.init(w.repixelId);
  };
  js.src = src;
  fjs.parentNode.insertBefore(js, fjs);
  }(window, document, 'script', 'repixel', 
  'https://sdk.repixel.co/r.js'));
  Repixel.init('5cefff7fce3aad00089e44e5');
</script>
<!-- Repixel Code -->
</head>
<body class="post-template tag-node tag-javascript tag-shell">
	<nav class="navbar navbar-default navbar-static-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <i class="fa fa-bars"></i>
      </button>
      <a class="navbar-brand" href="/">Stack <span style="color:#f16334;">Abuse</span></a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav" role="navigation" aria-label="Site navigation">
	<li class="nav-node-js"><a href="https://stackabuse.com/tag/node/">Node.js</a></li>
	<li class="nav-python"><a href="https://stackabuse.com/tag/python">Python</a></li>
	<li class="nav-java"><a href="https://stackabuse.com/tag/java/">Java</a></li>
    <li class="nav-hireremote">
        <a rel="noopener nofollow" target="_blank" href="https://hireremote.io/"
           ga-on="click"
           ga-event-category="Jobs"
           ga-event-action="Click"
           ga-event-label="HR-Nav-Link"
        >
            Jobs
        </a>
    </li>
</ul>

      <!--<ul class="nav navbar-nav pull-right">
        <li role="presentation">
          <a class="btn btn-success nav-btn" href="http://jobs.stackabuse.com">Find a Job</a>
        </li>
        <li role="presentation">
          <a class="btn btn-danger nav-btn" href="http://jobs.stackabuse.com/post">Post a Job</a>
        </li>
      </ul>-->
    </div><!--/.nav-collapse -->
  </div>
</nav>
	<!-- start site's main content area -->
<section class="content-wrap">
	<div class="container">
		<div class="row">
			<!-- start main post area -->
			<div class="col-md-8 main-content">
				<!-- start post -->
				<article id="5df551ced2e0df6b526de67a" class="post tag-node tag-javascript tag-shell">
					<div class="post-head">
						<h2 class="post-title">Executing Shell Commands with Node.js</h2>
						<div class="post-meta">
							<span class="author">
                                By
                                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/arpancodes">
                                    <i class="fa fa-twitter" style="color:#55acee;"></i>
                                    Arpan Abhishek
                                </a>
                            </span> &bull;
							<span class="date">December 17, 2019</span> &bull;
							<span class="comment-count"><a href="/executing-shell-commands-with-node-js/#disqus_thread">0 Comments</a></span>
						</div>
					</div>
                    <div class="post-ad">
                        <!-- 728x90/320x50 -->
<div id="waldo-tag-3878"></div>                    </div>
					<div class="post-content">
						<!--kg-card-begin: markdown--><h3 id="introduction">Introduction</h3>
<p>System administrators and developers frequently turn to automation to reduce their workload and improve their processes. When working with servers, automated tasks are frequently scripted with shell scripts. However, a developer might prefer to use a more general higher-level language for complex tasks. Many applications also need to interact with the file system and other OS-level components, which is often more easily done with command line level utilities.</p>
<p>With Node.js, we can run shell commands and process their inputs and outputs using JavaScript. Therefore, we can write most of these complex operations in JavaScript instead of the shell scripting language, potentially making the program easier to maintain.</p>
<p>In this article, we will learn the various ways to execute shell commands in Node.js using the <code>child_process</code> module.</p>
<h3 id="thechild_proccessmodule">The child_proccess Module</h3>
<p>Node.js executes its main event loop in a single thread. However, that does not mean that all of its processing is done in that one thread. Asynchronous tasks in Node.js are executed in other internal threads. When they are complete, the code in the callback, or error, is returned to the main, single thread.</p>
<p>These various threads are run in the same Node.js process. However, it is sometimes desirable to create another process to execute code. When a new process is created, the Operating System determines which processor it uses and how to schedule its tasks.</p>
<p>The <code>child_process</code> module creates new child processes of our main Node.js process. We can execute shell commands with these child processes.</p>
<p>Using external processes can improve performance of your application if used correctly. For example, if a feature of a Node.js application is CPU intensive, as Node.js is single threaded it would block the other tasks from executing while it is running.</p>
<p>However, we can delegate that resource intensive code to a child process, let's say a very efficient C++ program. Our Node.js code will then execute that C++ program in a new process, not blocking its other activities, and when complete process its output.</p>
<p>Two functions that we will use to execute shell commands are <code>exec</code> and <code>spawn</code>.</p>
<h3 id="theexecfunction">The exec Function</h3>
<p>The <code>exec()</code> function creates a new shell and executes a given command. The output from the execution is buffered, which means kept in memory, and is available for use in a callback.</p>
<p>Let's use <code>exec()</code> function to list all folders and files in our current directory. In a new Node.js file called <code>lsExec.js</code>, write the following code:</p>
<pre><code class="language-javascript">const { exec } = require(&quot;child_process&quot;);

exec(&quot;ls -la&quot;, (error, stdout, stderr) =&gt; {
    if (error) {
        console.log(`error: ${error.message}`);
        return;
    }
    if (stderr) {
        console.log(`stderr: ${stderr}`);
        return;
    }
    console.log(`stdout: ${stdout}`);
});
</code></pre>
<p>First, we require the <code>child_process</code> module in our program, specifically using the <code>exec()</code> function (via ES6 destructuring). Next, we call the <code>exec()</code> function with two parameters:</p>
<ul>
<li>A string with the shell command we want executed.</li>
<li>A callback function with three parameters: <code>error</code>, <code>stdout</code>, <code>stderr</code>.</li>
</ul>
<p>The shell command we are running is <code>ls -la</code>, which should list all the files and folders in our current directory line by line, including hidden files/folders. The callback function logs whether we got an <code>error</code> while trying to execute the command or output on the shell's <code>stdout</code> or <code>stderr</code> streams.</p>
<blockquote>
<p>Note: The <code>error</code> object is different from <code>stderr</code>. The <code>error</code> object is not null when the <code>child_process</code> module fails to execute a command. This could happen if you try to execute another Node.js script in <code>exec()</code> but the file could not be found, for example. On the other hand, if the command successfully runs and writes a message to the standard error stream, then the <code>stderr</code> object would not be null.</p>
</blockquote>
<p>If you run that Node.js file, you should see output similar to:</p>
<pre><code class="language-console">$ node lsExec.js
stdout: total 0
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5a3e282d222877222877221a">[email&#160;protected]</a> 9 arpan arpan  0 Dec  7 00:14 .
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="8beff9fcf3f9a6f3f9a6f3cb">[email&#160;protected]</a> 4 arpan arpan  0 Dec  7 22:09 ..
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="351847421847181847181875">[email&#160;protected]</a> 1 arpan arpan  0 Dec  7 15:10 lsExec.js

child process exited with code 0
</code></pre>
<p>Now that we've understood how to run commands with <code>exec()</code>, let's learn another way to execute commands with <code>spawn()</code>.</p>
<h3 id="thespawnfunction">The spawn Function</h3>
<p>The <code>spawn()</code> function executes a command in a <em>new process</em>. This function uses a <a target="_blank" href="/introduction-to-node-js-streams">Stream API</a>, so its output of the command is made available via listeners.</p>
<p>Similar to before, we will use the <code>spawn()</code> function to list all folders and files in our current directory. Let's create a new Node.js file, <code>lsSpawn.js</code>, and enter the following:</p>
<pre><code class="language-javascript">const { spawn } = require(&quot;child_process&quot;);

const ls = spawn(&quot;ls&quot;, [&quot;-la&quot;]);

ls.stdout.on(&quot;data&quot;, data =&gt; {
    console.log(`stdout: ${data}`);
});

ls.stderr.on(&quot;data&quot;, data =&gt; {
    console.log(`stderr: ${data}`);
});

ls.on('error', (error) =&gt; {
    console.log(`error: ${error.message}`);
});

ls.on(&quot;close&quot;, code =&gt; {
    console.log(`child process exited with code ${code}`);
});
</code></pre>
<p>We begin by requiring the <code>spawn()</code> function from the <code>child_process</code> module. Then, we create a new process that executes the <code>ls</code> command, passing <code>-la</code> as an argument. Note how the arguments are held in an array and not included in the command string.</p>
<p>We then set up our listeners. The <code>stdout</code> object of <code>ls</code>, fires a <code>data</code> event when the command writes to that stream. Similarly, the <code>stderr</code> also fires a <code>data</code> event when the command writes to that stream.</p>
<p>Errors are caught by listening for them directly on the object that stores the reference for the command. You will only get an error if <code>child_process</code> fails to run the command.</p>
<p>The <code>close</code> event occurs when the command has finished.</p>
<p>If we run this Node.js file, we should get output like before with <code>exec()</code>:</p>
<pre><code class="language-console">$ node lsSpawn.js
stdout: total 0
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5f3b2d28272d72272d72271f">[email&#160;protected]</a> 9 arpan arpan  0 Dec  7 00:14 .
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ddb9afaaa5aff0a5aff0a59d">[email&#160;protected]</a> 4 arpan arpan  0 Dec  7 22:09 ..
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c4e9b6b3e9b6e9e9b6e9e984">[email&#160;protected]</a> 1 arpan arpan  0 Dec  7 15:10 lsExec.js
<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="123f60653f603f3f603f3f52">[email&#160;protected]</a> 1 arpan arpan  0 Dec  7 15:40 lsSpawn.js

child process exited with code 0
</code></pre>
<h3 id="whentouseexecandspawn">When to use exec and spawn?</h3>
<p>The key difference between <code>exec()</code> and <code>spawn()</code> is how they return the data. As <code>exec()</code> stores all the output in a buffer, it is more memory intensive than <code>spawn()</code>, which streams the output as it comes.</p>
<p>Generally, if you are not expecting large amounts of data to be returned, you can use <code>exec()</code> for simplicity. Good examples of use-cases are creating a folder or getting the status of a file. However, if you are expecting a large amount of output from your command, then you should use <code>spawn()</code>. A good example would be using command to manipulate binary data and then loading it in to your Node.js program.</p>
<h3 id="conclusion">Conclusion</h3>
<p>Node.js can run shell commands by using the standard <code>child_process</code> module. If we use the <code>exec()</code> function, our command will run and its output will be available to us in a callback. If we use the <code>spawn()</code> module, its output will be available via event listeners.</p>
<p>If our application expects a lot of output from our commands, we should prefer <code>spawn()</code> over <code>exec()</code>. If not, we might opt to use <code>exec()</code> for its simplicity.</p>
<p>Now that you can run tasks external to Node.js, what applications would you build?</p>
<!--kg-card-end: markdown-->
					</div>
					<footer class="post-footer clearfix">
						<div class="pull-left tag-list">
							<i class="fa fa-folder-open-o"></i>
							<a href="/tag/node/">node</a>,<a href="/tag/javascript/">javascript</a>,<a href="/tag/shell/">shell</a>
						</div>
						<div class="pull-right share">
							<div>
	<ul class="share-icons">
		<!-- twitter -->
		<li>
			<a aria-label="Share on Twitter" href="https://twitter.com/share?text=Executing%20Shell%20Commands%20with%20Node.js&amp;url=https://stackabuse.com/executing-shell-commands-with-node-js/" onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;"><i class="fa fa-twitter" style="color:#55acee;"></i></a>
		</li>
		<!-- facebook -->
		<li>
			<a aria-label="Share on Facebook" href="https://www.facebook.com/sharer/sharer.php?u=https://stackabuse.com/executing-shell-commands-with-node-js/" onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;"><i class="fa fa-facebook" style="color:#3b5998;"></i></a>
		</li>
		<!-- linkedin -->
		<li>
			<a aria-label="Share on Linkedin" href="https://www.linkedin.com/shareArticle?mini=true%26url=https://stackabuse.com/executing-shell-commands-with-node-js/%26source=https://stackabuse.com" onclick="window.open(this.href, 'linkedin-share', 'width=490,height=530');return false;"><i class="fa fa-linkedin" style="color:#0077b5;"></i></a>
		</li>
	</ul>
</div>
						</div>
					</footer>
                    <!-- start about the author -->
<!-- end about the author -->
				</article>
                <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">
            <form action="#" method="post" class="form-inline validate" novalidate>
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and jobs in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row" style="margin-left: 10px;margin-right: 10px;">
                    <div class="col-md-7 col-md-offset-1 col-xs-12" style="margin-bottom: 5px;">
                        <label class="control-label sr-only" for="section-newsletter">Newsletter Signup</label>
                        <input id="section-newsletter" type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-3 col-xs-12" style="margin-top: 5px;">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-block btn-subscribe"
                            ga-on="click"
                            ga-event-category="Newsletter"
                            ga-event-action="Signup"
                            ga-event-label="General-Newsletter-Signup"
                        >
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->
				<div class="comment-wrap">
					<!-- start disqus comment -->
<div class="disqus-container">
	<div id="disqus_thread"></div>
	    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
</div>
<!-- end disqus comment -->
				</div>
				<!-- start prev next wrap -->
<div class="prev-next-wrap clearfix">
		<a class="btn btn-default pull-left" href="/creational-design-patterns-in-python/" title="Creational Design Patterns in Python"><i class="fa fa-angle-left fa-fw"></i> Previous Post</a>
		&nbsp;
        <a class="btn btn-default pull-right" href="/deploying-node-js-apps-to-aws-ec2-with-docker/" title="Deploying Node.js Apps to AWS EC2 with Docker">Next Post <i class="fa fa-angle-right fa-fw"></i></a>
</div>				<!-- end post -->
			</div>
			<!-- end main post area -->
			<!-- start sidebar -->
<div class="col-md-4 sidebar">
    <!-- start widget -->
<div class="widget">
	<h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-3874"></div>    </div>
</div>
<!-- end widget -->
    <!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-twitter fa-2x"></i>
                    <i class="hidden-xs fa fa-twitter fa-lg"></i>
                    <span class="hidden-xs">Twitter</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-facebook fa-2x"></i>
                    <i class="hidden-xs fa fa-facebook fa-lg"></i>
                    <span class="hidden-xs">Facebook</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-rss fa-2x"></i>
                    <i class="hidden-xs fa fa-rss fa-lg"></i>
                    <span class="hidden-xs">RSS</span>
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->
    <!-- start newsletter widget -->
<div class="widget">
    <h4 class="title">Newsletter</h4>
    <div class="content newsletter">
        <p style="font-size: 16px;">Subscribe to our newsletter! Get occassional tutorials, guides, and reviews in your inbox.</p>
        <form action="#" method="post" class="validate" novalidate>
            <div class="input-group">
                <label class="control-label sr-only" for="widget-newsletter">Newsletter Signup</label>
                <input id="widget-newsletter" type="email" value="" name="email" class="required email input-lg" placeholder="Enter your email...">
            </div>
            <div class="input-group">
                <button type="submit" name="subscribe" class="btn btn-lg btn-default"
                    ga-on="click"
                    ga-event-category="Newsletter"
                    ga-event-action="Signup"
                    ga-event-label="General-Newsletter-Signup"
                >
                    <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                    Subscribe
                </button>
            </div>
            <span style="color: #7f7f7f;">No spam ever. Unsubscribe at any time.</span>
        </form>
        <div class="message"></div>
    </div>
</div>
<!-- end tag cloud widget -->
    <!-- start widget -->
<div class="widget">
    <h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-7184"></div>
    </div>
</div>
<!-- end widget -->
    <div class="widget-sticky">
        <!-- start widget -->
<div class="widget">
    <a rel="noopener nofollow" target="_blank"
       class="dcp-link"
       href="http://stackabu.se/daily-coding-problem"
       style="text-decoration: none;"
    >
        <h4 class="title">Interviewing for a job?</h4>
    </a>
    <div class="content product">
        <style type="text/css">
            #product-features li {
                margin: 5px 0;
            }
        </style>
        <div id="product-features" style="font-size: 16px;line-height: 1.7em;">
            <ul style="list-style: initial;">
                <li>
                    Improve your skills by solving one coding problem every day
                </li>
                <li>
                    Get the solutions the next morning via email
                </li>
                <li>
                    Practice on <strong>actual problems</strong> asked by top companies, like:
                    <div style="margin: 15px 0px;">
                        <img src="/assets/images/logo-google.svg?v=0879c772bf" style="height: 16px;">
                        &nbsp;
                        <img src="/assets/images/logo-facebook.svg?v=0879c772bf" style="height: 13px;margin-bottom: 3px;">
                        &nbsp;
                        <img src="/assets/images/logo-amazon.svg?v=0879c772bf" style="height: 19px;">
                        &nbsp;
                        <img src="/assets/images/logo-microsoft.svg?v=0879c772bf" style="height: 18px;">
                    </div>
                </li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-5">
                <a rel="noopener nofollow" target="_blank"
                   class="btn btn-default dcp-link"
                   href="http://stackabu.se/daily-coding-problem"
                >
                    <i class="fa fa-code"></i>
                    &nbsp;
                    Daily Coding Problem
                </a>
            </div>
        </div>
    </div>
</div>
<!-- end widget -->
        <!-- start widget -->
<div class="widget">
    <h4 class="title">Want a remote job?</h4>
    <div class="content jobs hr">
        <ul style="margin-bottom: 0px;">
        </ul>
        <div class="row">
            <div class="col-md-4">
                <strong>
                    <a rel="noopener nofollow" target="_blank"
                       class="btn btn-default"
                       href="https://hireremote.io"
                       style="margin-top: 10px;"
                       ga-on="click"
                       ga-event-category="Jobs"
                       ga-event-action="Click"
                       ga-event-label="HR-More-Link"
                    >
                        <i class="fa fa-arrow-circle-right"></i>&nbsp; More jobs
                    </a>
                </strong>
            </div>
            <div class="col-md-8 text-right" style="margin-top: 18px;">
                Jobs via
                <a rel="noopener nofollow" target="_blank" href="https://hireremote.io"
                   class="hr-link"
                   style="color: #f16334;"
                >
                    HireRemote.io
                </a>
            </div>
            <!-- <div class="col-md-9 text-right">
                <span>Jobs by</span>
                <a
                    rel="noopener nofollow" target="_blank"
                    href="https://www.hireremote.io/"
                    id="jobs_widget_link"
                    ga-on="click"
                    ga-event-category="Jobs"
                    ga-event-action="Click"
                    ga-event-label="HR-Jobs-By"
                >
                    <span id="hr_logo_container">
                        <img
                            id="hr_logo"
                            src="https://www.ziprecruiter.com/img/logos/logo-sm-black-304px.png" alt="HireRemote.io"
                            width="100"
                        />
                    </span>
                </a>
            </div> -->
        </div>
    </div>
</div>
<!-- end widget -->
    </div>
</div>
<!-- end sidebar -->
		</div>
	</div>
</section>
<!-- end site's main content area -->


	<!-- start main-footer -->
	<footer class="main-footer">
		<div class="container">
			<div class="row">
				<!-- start first footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Recent Posts</h4>
    <div class="content recent-post">
        <div class="recent-single-post">
            <a href="/formatting-strings-with-the-python-template-class/" class="post-title">Formatting Strings with the Python Template Class</a>
            <!--<div class="date">February 07, 2020</div>-->
        </div>
        <div class="recent-single-post">
            <a href="/using-fetch-to-send-http-requests-in-javascript/" class="post-title">Using fetch to Send HTTP Requests in JavaScript</a>
            <!--<div class="date">February 06, 2020</div>-->
        </div>
        <div class="recent-single-post">
            <a href="/deploying-django-apps-to-heroku-from-github/" class="post-title">Deploying Django Apps to Heroku from GitHub</a>
            <!--<div class="date">February 05, 2020</div>-->
        </div>
    </div>
</div>
<!-- end widget -->				</div>
				<!-- end first footer widget area -->
				<!-- start second footer widget area -->
				<div class="col-sm-4">
					<!-- start tag cloud widget -->
<div class="widget">
    <h4 class="title">Tags</h4>
    <div class="content tag-cloud">
        <a href="/tag/algorithms/">algorithms</a><a href="/tag/amqp/">amqp</a><a href="/tag/angular/">angular</a><a href="/tag/announcements/">announcements</a><a href="/tag/apache/">apache</a><a href="/tag/api/">api</a><a href="/tag/arduino/">arduino</a><a href="/tag/artificial-intelligence/">artificial intelligence</a><a href="/tag/asynchronous/">asynchronous</a><a href="/tag/aws/">aws</a>
    </div>
</div>
<!-- end tag cloud widget -->
				</div>
				<!-- end second footer widget area -->
				<!-- start third footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-twitter fa-2x"></i>
                    <i class="hidden-xs fa fa-twitter fa-lg"></i>
                    <span class="hidden-xs">Twitter</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-facebook fa-2x"></i>
                    <i class="hidden-xs fa fa-facebook fa-lg"></i>
                    <span class="hidden-xs">Facebook</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-rss fa-2x"></i>
                    <i class="hidden-xs fa fa-rss fa-lg"></i>
                    <span class="hidden-xs">RSS</span>
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->
				</div>
				<!-- end third footer widget area -->
			</div>
		</div>
	</footer>
	<!-- end main-footer -->
	<!-- start copyright section -->
<div class="copyright">
	<div class="container">
		<div class="row">
			<div class="col-sm-12">
				Copyright &copy; 2020, <a href="https://stackabuse.com">Stack Abuse</a>.  All Rights Reserved.
			</div>
		</div>
	</div>
</div>
<!-- end copyright section -->	<div class="footer-links">
		<div class="container">
			<div class="row">
				<div class="col-sm-12">
					<a href="/disclosure">Disclosure</a>
					•
					<a href="/privacy-policy">Privacy Policy</a>
					•
					<a href="/terms-of-service">Terms of Service</a>
				</div>
			</div>
		</div>
	</div>
	<a aria-label="Back to Top" href="#" id="back-to-top"><i class="fa fa-angle-up"></i></a>
	<!--
<script src="//my.hellobar.com/4dd9990be00532b0fc7961824b7d7a0930e9e2b7.js" type="text/javascript" charset="utf-8" async="async"></script>
-->
	<!-- scripts -->
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script id="dsq-count-scr" src="//stackabuse.disqus.com/count.js" async></script>
    <script>
      var disqus_config = function() {
        this.page.url = window.location.href;
        this.page.identifier = window.location.href;
        this.callbacks.onReady = [function() {
          if (window.onDisqusReady) {
            window.onDisqusReady();
          }
        }];
      };
      var disqus_script_url = 'https://stackabuse.disqus.com/embed.js';
    </script>

    <!-- HTML templates for use in JS code -->
    <script id="newsletter-template" type="text/x-custom-template">
        <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">
            <form action="#" method="post" class="form-inline validate" novalidate>
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and jobs in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row" style="margin-left: 10px;margin-right: 10px;">
                    <div class="col-md-7 col-md-offset-1 col-xs-12" style="margin-bottom: 5px;">
                        <label class="control-label sr-only" for="section-newsletter">Newsletter Signup</label>
                        <input id="section-newsletter" type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-3 col-xs-12" style="margin-top: 5px;">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-block btn-subscribe"
                            ga-on="click"
                            ga-event-category="Newsletter"
                            ga-event-action="Signup"
                            ga-event-label="General-Newsletter-Signup"
                        >
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js" type="text/javascript"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/languages/dockerfile.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/languages/yaml.min.js"></script>
    <script src="/assets/js/bootstrap-custom.min.js?v=0879c772bf" async></script>
	<script src="/assets/js/main.min.js?v=0879c772bf" async></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML" type="text/javascript" async></script>
	<!-- Add your analytic code below -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  if (window.location.hostname !== 'localhost') {
    ga('create', 'UA-43140675-1', 'auto');
    ga('require', 'eventTracker');
    ga('send', 'pageview');
  }

</script>
<script async=true src="//cdnjs.cloudflare.com/ajax/libs/autotrack/1.0.1/autotrack.js"></script>
</body>
</html>
